# Generated by Django 5.2.1 on 2025-05-22 23:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('user_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('home_page', models.URLField(blank=True)),
                ('text', models.TextField(max_length=5000)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='TopComment',
            fields=[
                ('basecomment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comments.basecomment')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('comments.basecomment',),
        ),
        migrations.CreateModel(
            name='NestedComment',
            fields=[
                ('basecomment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comments.basecomment')),
                ('parent_comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nested_comments', to='comments.basecomment')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('comments.basecomment',),
        ),
    ]
